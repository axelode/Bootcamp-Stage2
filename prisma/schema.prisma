// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id String @id @default(uuid())
  username String @unique
  full_name String
  email String @unique
  password String
  profile_picture String
  bio String
  following follow[] @relation(name: "following")
  follower follow[] @relation(name: "follower")
  threads threads[]
  replies replies[]
  likes likes[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model follow {
  id String @id @default(uuid())
  following users @relation(name: "following" ,fields: [following_id], references: [id], onDelete: Cascade)
  following_id String
  follower users @relation(name: "follower", fields: [follower_id], references: [id], onDelete: Cascade)
  follower_id String
  followed_at DateTime @default(now())
}

model threads {
  id String @id @default(uuid())
  content String
  image String?
  isLiked Boolean @default(false)
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
  replies replies[]
  likes likes[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model replies {
  id String @id @default(uuid())
  content String
  image String?
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
  thread threads @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  thread_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model likes {
  id String @id @default(uuid())
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
  thread threads @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  thread_id String
}